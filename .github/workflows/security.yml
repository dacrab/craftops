name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run security scan every Monday at 6 AM UTC
    - cron: '0 6 * * 1'

env:
  GO_VERSION: "1.21"

jobs:
  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: ['go']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go environment
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Use default CodeQL query suites + security-and-quality
        queries: security-and-quality

    - name: Download Go modules
      run: go mod download

    - name: Build project for analysis
      run: go build -v ./...

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  gosec:
    name: Gosec Security Scanner
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go environment
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Install and run Gosec
      run: |
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec -fmt sarif -out gosec-results.sarif ./...

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: gosec-results.sarif

    - name: Upload Gosec results artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: gosec-results
        path: gosec-results.sarif
        retention-days: 30

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go environment
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Run Nancy (Go dependency vulnerability scanner)
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        go list -json -deps ./... | nancy sleuth

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...
