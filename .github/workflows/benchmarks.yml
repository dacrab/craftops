name: Performance Benchmarks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]
  schedule:
    # Run benchmarks weekly on Sunday at 3 AM UTC
    - cron: '0 3 * * 0'

env:
  GO_VERSION: "1.21"

jobs:
  benchmark:
    name: Run Go Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run benchmarks
        run: |
          go test -bench=. -benchmem -benchtime=5s -count=3 ./... > benchmark_results.txt 2>&1 || true
          cat benchmark_results.txt

      - name: Store benchmark result for main branch
        if: github.ref == 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'go'
          output-file-path: benchmark_results.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          comment-on-alert: true
          alert-threshold: '200%'
          fail-on-alert: false

      - name: Compare benchmarks for PR
        if: github.event_name == 'pull_request'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'go'
          output-file-path: benchmark_results.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: false
          comment-on-alert: true
          alert-threshold: '150%'
          fail-on-alert: false
          comment-always: true

      - name: Upload benchmark artifacts
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark_results.txt
          retention-days: 30

  memory-leak-check:
    name: Memory Leak Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build with race detector
        run: go build -race -o craftops-race ./cmd/craftops

      - name: Run memory profiling tests
        run: |
          # Run tests with memory profiling
          go test -memprofile=mem.prof -memprofilerate=1 ./...
          
          # Analyze memory profile
          go tool pprof -text mem.prof > memory_analysis.txt
          echo "=== Memory Analysis ===" 
          cat memory_analysis.txt

      - name: Upload memory profile
        uses: actions/upload-artifact@v4
        with:
          name: memory-profile
          path: |
            mem.prof
            memory_analysis.txt
          retention-days: 7
