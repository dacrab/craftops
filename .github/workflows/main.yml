name: Main Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: main-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI Pipeline
    uses: ./.github/workflows/ci.yml
    
  security:
    name: Security Analysis
    needs: ci
    if: always() && needs.ci.outputs.success == 'true'
    uses: ./.github/workflows/security.yml
    with:
      trigger-reason: "post-ci"
    permissions:
      security-events: write
      actions: read
      contents: read
    
  release:
    name: Release
    needs: [ci, security]
    if: |
      always() && 
      needs.ci.outputs.success == 'true' && 
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push'
    uses: ./.github/workflows/release.yml
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    secrets: inherit

  pipeline-success:
    name: Pipeline Complete
    runs-on: ubuntu-latest
    needs: [ci, security, release]
    if: always()
    steps:
      - name: Check results
        run: |
          if [[ "${{ needs.ci.result }}" == "success" ]]; then
            echo "‚úÖ CI Pipeline: SUCCESS"
          else
            echo "‚ùå CI Pipeline: ${{ needs.ci.result }}"
          fi
          
          if [[ "${{ needs.security.result }}" == "success" || "${{ needs.security.result }}" == "skipped" ]]; then
            echo "‚úÖ Security Analysis: ${{ needs.security.result }}"
          else
            echo "‚ùå Security Analysis: ${{ needs.security.result }}"
          fi
          
          if [[ "${{ needs.release.result }}" == "success" || "${{ needs.release.result }}" == "skipped" ]]; then
            echo "‚úÖ Release: ${{ needs.release.result }}"
          else
            echo "‚ùå Release: ${{ needs.release.result }}"
          fi
          
          # Fail if CI failed
          if [[ "${{ needs.ci.result }}" != "success" ]]; then
            echo "Pipeline failed due to CI failure"
            exit 1
          fi
          
          echo "üéâ Pipeline completed successfully!"
