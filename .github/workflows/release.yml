name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit

  build:
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: minecraft-mod-manager
            asset_name: minecraft-mod-manager-linux
          - os: windows-latest
            artifact_name: minecraft-mod-manager.exe
            asset_name: minecraft-mod-manager-windows.exe
          - os: macos-latest
            artifact_name: minecraft-mod-manager
            asset_name: minecraft-mod-manager-macos
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pyinstaller
          pip install -e .
          
      - name: Build Python package
        run: |
          python -m build
          
      - name: Build executable
        run: |
          pyinstaller --onefile \
            --name ${{ matrix.artifact_name }} \
            --add-data "minecraft_mod_manager/settings:minecraft_mod_manager/settings" \
            --hidden-import=aiohttp \
            --hidden-import=tqdm \
            --hidden-import=toml \
            minecraft_mod_manager/app.py
            
      - name: List built files
        run: |
          echo "Built files:"
          ls -l dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: |
            dist/*.whl
            dist/*.tar.gz
            dist/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
            dist/minecraft-mod-manager*
          generate_release_notes: true
          body: |
            ## ðŸš€ Installation Methods
            
            ### Option 1: Pre-built Executable
            1. ðŸ“¥ Download the appropriate executable for your system:
               - Linux: `minecraft-mod-manager-linux`
               - Windows: `minecraft-mod-manager-windows.exe`
               - macOS: `minecraft-mod-manager-macos`
            2. ðŸ”“ Make it executable (Linux/macOS):
               ```bash
               chmod +x minecraft-mod-manager-*
               ```
            3. ðŸŽ® Run it:
               ```bash
               ./minecraft-mod-manager-* --help
               ```
            
            ### Option 2: Python Package
            ```bash
            pip install minecraft-mod-manager
            ```
            
            For detailed usage instructions, please visit our [documentation](https://github.com/dacrab/minecraft-mod-manager#readme).